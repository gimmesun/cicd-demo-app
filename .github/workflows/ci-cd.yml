name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Frontend
        run: |
          cd frontend
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:latest .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:latest

      - name: Build and push Backend
        run: |
          cd backend
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend:latest .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend:latest

      - name: Test Backend
        run: |
          cd backend
          npm install
          npm test

      - name: Deployment notification
        run: |
          echo "âœ… Images pushed to GHCR"
  deploy:
    needs: build-and-push
    runs-on: self-hosted
    permissions:
      packages: read
    steps:
      - name: login to GHCR
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
      - name: pull docker image
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:latest
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend:latest
          docker compose -f ${{ env.IMAGE_NAME }}/docker-compose.yml up -d
          docker image prune -f
